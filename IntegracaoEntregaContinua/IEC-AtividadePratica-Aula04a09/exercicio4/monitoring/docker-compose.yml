version: '3.8'

services:
  app:
    # Substitua pela imagem da sua aplicação
    image: node:18-alpine
    container_name: pixeltrack_app
    # Comando para rodar a app, que deve expor métricas em /metrics na porta 3001
    command: >
      sh -c "echo 'Iniciando App...' && sleep 3600"
    ports:
      - "3001:3001"
    volumes:
      - ./app:/usr/src/app # Volume para o código da aplicação
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # Volume com a configuração do scrape
    ports:
      - "9090:9090"
    networks:
      - monitor-net

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - monitor-net

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Permite ao Promtail descobrir containers
      - ./promtail/config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin # Defina uma senha segura
    networks:
      - monitor-net

networks:
  monitor-net:
    driver: bridge